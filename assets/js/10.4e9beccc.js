(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{223:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"获取和创建项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取和创建项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 获取和创建项目")]),t._v(" "),s("p",[t._v("有两种取得 Git 项目仓库的方法：")]),t._v(" "),s("ul",[s("li",[t._v("在"),s("strong",[t._v("现有项目或目录")]),t._v("下导入所有文件到 Git 中")]),t._v(" "),s("li",[t._v("从"),s("strong",[t._v("服务器克隆")]),t._v("到现有的 Git 仓库")])]),t._v(" "),s("h2",{attrs:{id:"初始化-git-init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化-git-init","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化 git init")]),t._v(" "),s("blockquote",[s("p",[t._v("Create an empty Git repository or reinitialize an existing one")]),t._v(" "),s("p",[t._v("创建一个空的 Git 仓库或重新初始化现有的仓库")])]),t._v(" "),s("h3",{attrs:{id:"初始化版本仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化版本仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化版本仓库")]),t._v(" "),s("ul",[s("li",[t._v("初始化空目录，通过 Git 对该目录进行版本管理")]),t._v(" "),s("li",[t._v("初始化已关联版本仓库目录")])]),t._v(" "),s("p",[t._v("该命令将创建一个名为 "),s("code",[t._v(".git")]),t._v(" 的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的骨干。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("p",[t._v("新建一个目录，将其初始化为 Git 代码库。"),s("code",[t._v("<project-name>")]),t._v(" 为新建代码库的名称。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("project-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init git-guidebook\n")])])]),s("h2",{attrs:{id:"克隆-git-clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆-git-clone","aria-hidden":"true"}},[t._v("#")]),t._v(" 克隆 git clone")]),t._v(" "),s("blockquote",[s("p",[t._v("Clone a repository into a new directory")]),t._v(" "),s("p",[t._v("将已有存储库克隆到新目录中")])]),t._v(" "),s("h3",{attrs:{id:"克隆至本地仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆至本地仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 克隆至本地仓库")]),t._v(" "),s("p",[t._v("克隆一个现有项目和它的整个版本历史。"),s("code",[t._v("<url>")]),t._v(" 为项目路径，该路径可为"),s("strong",[t._v("本地路径")]),t._v("，亦可是"),s("strong",[t._v("远程服务端路径")]),t._v("。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地仓库")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone /path/to/repository\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程仓库")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone username@host:/path/to/repository\n")])])]),s("h3",{attrs:{id:"克隆仓库至指定到分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库至指定到分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 克隆仓库至指定到分支")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone -b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --single-branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone -b master --single-branch https://github.com/tsejx/git-guidebook.git\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);