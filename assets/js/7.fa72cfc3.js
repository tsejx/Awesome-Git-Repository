(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{219:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基本快照"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本快照","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本快照")]),t._v(" "),s("h2",{attrs:{id:"添加-git-add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加-git-add","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加 git add")]),t._v(" "),s("blockquote",[s("p",[t._v("Add file contents to the index")]),t._v(" "),s("p",[t._v("将文件内容添加到索引")])]),t._v(" "),s("p",[s("code",[t._v("git add")]),t._v(" 命令将文件内容添加到"),s("strong",[t._v("索引库")]),t._v("（将修改记录添加到暂存区）。也就是将要提交的文件的信息添加到索引库中。")]),t._v(" "),s("h3",{attrs:{id:"添加修改记录至暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加修改记录至暂存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加修改记录至暂存区")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目录")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有目录文件(包括修过过的文件、新建的文件，但不包括删除的文件)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交单个文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" index.html\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交 markdown 文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *.md\n")])])]),s("h3",{attrs:{id:"分次添加修改至暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分次添加修改至暂存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 分次添加修改至暂存区")]),t._v(" "),s("p",[t._v("添加每个变化前，都会要求确认。对于同一个文件的多处变化，可以实现分次提交。")]),t._v(" "),s("p",[s("code",[t._v("-p")]),t._v(" 参数相当于 "),s("code",[t._v("--patch")]),t._v("，表示多次提交。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -p\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --patch\n")])])]),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将以Controller结尾的文件的所有修改添加到暂存区")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *Controller\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将所有以Hello开头的文件的修改添加到暂存区 例如:HelloWorld.txt,Hello.java,HelloGit.txt ...")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" Hello*\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将以Hello开头后面只有一位的文件的修改提交到暂存区 例如:Hello1.txt,HelloA.java 如果是HelloGit.txt或者Hello.java是不会被添加的$ git add [file1] [file2] ...")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" Hello?\n")])])]),s("h3",{attrs:{id:"添加跟踪修改至暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加跟踪修改至暂存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加跟踪修改至暂存区")]),t._v(" "),s("p",[t._v("标记本地有改动（"),s("strong",[t._v("包括删除和修改，但不包括新建")]),t._v("）的"),s("strong",[t._v("已经追踪")]),t._v("的文件，并添加至暂存库。")]),t._v(" "),s("p",[s("code",[t._v("-u")]),t._v(" 即 "),s("code",[t._v("--update")]),t._v(" 表示更新索引，使其具有与 "),s("code",[t._v("<pathspec>")]),t._v(" 匹配的条目。")]),t._v(" "),s("p",[t._v("省略 "),s("code",[t._v("<path>")]),t._v(" 表示  "),s("code",[t._v(".")]),t._v(" ，即当前目录。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -u "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pathspec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --update "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pathspec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"添加修改到暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加修改到暂存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加修改到暂存区")]),t._v(" "),s("p",[t._v("标记本地所有改动的文件（包括删除、修改和新建），并添加至暂存库。")]),t._v(" "),s("p",[s("code",[t._v("-A")]),t._v(" 即 "),s("code",[t._v("--all")]),t._v(" 或 "),s("code",[t._v("--no-ignore-removal")]),t._v(" 表示更新索引，不仅在工作树具有匹配 "),s("code",[t._v("<pathspec>")]),t._v(" 的文件的位置，而且索引已经有条目的位置。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --all\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --no-ignore-removal\n")])])]),s("p",[s("code",[t._v("git add -A")]),t._v(" 相当于同时执行 "),s("code",[t._v("git add .")]),t._v(" 和 "),s("code",[t._v("git add -u")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"状态-git-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态-git-status","aria-hidden":"true"}},[t._v("#")]),t._v(" 状态 git status")]),t._v(" "),s("blockquote",[s("p",[t._v("Show the working tree status")]),t._v(" "),s("p",[t._v("显示工作树的状态")])]),t._v(" "),s("p",[t._v("执行该命令会返回三部分信息：")]),t._v(" "),s("ol",[s("li",[t._v("拟提交的变更：这是已经放入暂存区，准备 "),s("code",[t._v("commit")]),t._v(" 提交的变更")]),t._v(" "),s("li",[t._v("未暂存的变更：这是工作目录和暂存区快照之间存在差异的文件列表")]),t._v(" "),s("li",[t._v("未跟踪的文件：这类文件是被版本管理忽略的文件")])]),t._v(" "),s("p",[s("code",[t._v("git status")]),t._v(" 不显示已经 "),s("code",[t._v("commit")]),t._v(" 到项目历史中去的信息。看项目历史的信息要使用 "),s("router-link",{attrs:{to:"/6_Inspection%26Comparison.html#日志-log"}},[s("code",[t._v("git log")])]),t._v("。")],1),t._v(" "),s("h3",{attrs:{id:"查看版本修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看版本修改","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看版本修改")]),t._v(" "),s("p",[t._v("在每次执行 "),s("code",[t._v("git commit")]),t._v(" 之前先使用 "),s("code",[t._v("git status")]),t._v(" 检查文件状态是一个很好的习惯，这样能防止你不小心提交了您不想提交的东西。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])])]),s("h3",{attrs:{id:"查看忽略文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看忽略文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看忽略文件")]),t._v(" "),s("p",[t._v("可以查看添加到 "),s("code",[t._v(".gitignore")]),t._v(" 的文件的状态信息。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status --ignored\n")])])]),s("h2",{attrs:{id:"提交-git-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交-git-commit","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交 git commit")]),t._v(" "),s("blockquote",[s("p",[t._v("Record changes to the repository")]),t._v(" "),s("p",[t._v("记录对存储库的更改")])]),t._v(" "),s("p",[s("code",[t._v("git commit")]),t._v(" 命令用于将更改记录（提交）到存储库。将索引库的"),s("strong",[t._v("当前内容")]),t._v("与"),s("strong",[t._v("描述更改的用户")]),t._v("和"),s("strong",[t._v("日志消息")]),t._v("一起存储在新的提交中。")]),t._v(" "),s("p",[t._v("如果您提交，然后立即发现错误，可以使用 "),s("a",{attrs:{href:"#%E5%9B%9E%E6%BB%9A-git-reset"}},[t._v("git reset")]),t._v(" 命令恢复。")]),t._v(" "),s("h3",{attrs:{id:"提交至本地仓"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交至本地仓","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交至本地仓")]),t._v(" "),s("p",[s("code",[t._v("<msg>")]),t._v(" 表示提交的版本描述，如果给出了多个 "),s("code",[t._v("-m")]),t._v(" ，它们的值将作为单独的段落连接起来。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'the commit messge'")]),t._v("\n")])])]),s("p",[t._v("如果你想将暂存区指定的文件修改提交到本地仓库区，你可以使用如下的命令。"),s("code",[t._v("<file>")]),t._v(" 表示你要提交的文件路径，文件可以是多个。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". -m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"提交跟踪文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交跟踪文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交跟踪文件")]),t._v(" "),s("p",[t._v("如果你想将工作区所有自上一次提交 "),s("code",[t._v("commit")]),t._v(" 之后的变化直接提交到仓库区，你可以使用如下命令，相当于省略了 "),s("code",[t._v("git add")]),t._v("。")]),t._v(" "),s("p",[t._v("对于还没有跟踪 "),s("code",[t._v("track")]),t._v(" 的文件，还是需要执行 "),s("code",[t._v("git add <file>")]),t._v(" 命令。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a\n")])])]),s("h3",{attrs:{id:"提交时查看文件修改详情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交时查看文件修改详情","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交时查看文件修改详情")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -v\n")])])]),s("h3",{attrs:{id:"增补提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增补提交","aria-hidden":"true"}},[t._v("#")]),t._v(" 增补提交")]),t._v(" "),s("p",[t._v("如果你想重做上一次 "),s("code",[t._v("commit")]),t._v("，并包括指定文件的新变化，那么你可以使用如下命令。")]),t._v(" "),s("p",[t._v("增补提交，会使用与当前提交节点相同的父节点进行一次新的提交，旧的提交将会被取消。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -amend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("如果你想使用一次新的提交 "),s("code",[t._v("commit")]),t._v("，替代上一次提交，那么你可以使用如下命令。如果代码没有任何新变化，则用来改写上一次 "),s("code",[t._v("commit")]),t._v(" 的提交信息。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -amend -m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"修改提交者信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改提交者信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改提交者信息")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend --author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend --author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tsejx <tsejx@foxmail.com>'")]),t._v("\n")])])]),s("h3",{attrs:{id:"初始化提交记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化提交记录","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化提交记录")]),t._v(" "),s("blockquote",[s("p",[t._v("⚠️ "),s("strong",[t._v("慎重操作")])])]),t._v(" "),s("p",[t._v("也就是把所有的改动都重新放回工作区，并"),s("strong",[t._v("清空所有的"),s("code",[t._v("commit")])]),t._v("，这样就可以重新提交第一个 "),s("code",[t._v("commit")]),t._v(" 了。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-ref -d HEAD\n")])])]),s("h2",{attrs:{id:"撤销-git-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销-git-reset","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销 git reset")]),t._v(" "),s("blockquote",[s("p",[t._v("Reset current HEAD to the specified state")]),t._v(" "),s("p",[t._v("用于将当前 "),s("code",[t._v("HEAD")]),t._v(" 复位到指定状态（一般用于撤消之前的一些操作）")])]),t._v(" "),s("h3",{attrs:{id:"撤销暂存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销暂存","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销暂存")]),t._v(" "),s("p",[t._v("相当于对 "),s("code",[t._v("git add")]),t._v(" 命令的反向操作。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销暂存区的修改，重新放回工作区")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退暂存区里的文件，还原为（HEAD commit 里面该文件的状态）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会撤销从上次提交之后的一些操作")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD -- "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置暂存区与工作区，与上一次提交保持一致")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n")])])]),s("h3",{attrs:{id:"撤销到某个提交版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销到某个提交版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销到某个提交版本")]),t._v(" "),s("p",[t._v("和 "),s("code",[t._v("revert")]),t._v(" 的区别："),s("code",[t._v("reset")]),t._v(" 命令会抹去某个提交记录 "),s("code",[t._v("commit id")]),t._v(" 之后的所有提交 "),s("code",[t._v("commit")]),t._v("。")]),t._v(" "),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚当前分支的指针到指定提交版本，同时重置暂存区，但工作区不变（默认就是-mixed参数）")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚至上个版本，它将重置HEAD到另外一个提交记录,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -mixed HEAD^\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退至三个版本之前，只回退了提交的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可。")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -soft HEAD~3\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到指定的提交版本，暂存区和工作区也会与变为指定提交版本一致")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到指定提交版本，但保持暂存区和工作区不变")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --keep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"中断工作流程处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中断工作流程处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 中断工作流程处理")]),t._v(" "),s("p",[t._v("在实际开发中经常出现这样的情形：你正在开发一个大的新功能（工作在分支："),s("code",[t._v("feature")]),t._v(" 中），此时来了一个紧急的 BUG 需要修复，但是目前在工作区中的内容还没有成型，还不足以提交，但是又必须切换的另外的分支去修改 BUG。")]),t._v(" "),s("p",[t._v("📍 "),s("strong",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you were working in 'feature' branch")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout feature\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# develop new feature")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"snapshot WIP"')]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (1)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fix bug")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit with real log")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout feature\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD^ \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go back to WIP state\t\t# (2)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset\t\t\t\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (3)")]),t._v("\n")])])]),s("ol",[s("li",[t._v("这次属于临时提交，因此随便添加一个临时注释即可")]),t._v(" "),s("li",[t._v("这次 "),s("code",[t._v("reset")]),t._v(" 删除了 "),s("code",[t._v("WIP commit")]),t._v("，并且把工作区设置成提交 WIP 快照之前的状态。")]),t._v(" "),s("li",[t._v("此时，在索引中依然遗留着“snapshot WIP”提交时所做的未提交变化，"),s("code",[t._v("git reset")]),t._v(" 将会清理索引成为尚未提交”"),s("em",[t._v("snapshot WIP")]),t._v("“时的状态便于接下来继续工作。")])]),t._v(" "),s("h2",{attrs:{id:"删除-git-rm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除-git-rm","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除 git rm")]),t._v(" "),s("blockquote",[s("p",[t._v("Remove files from the working tree and from the index")]),t._v(" "),s("p",[t._v("用于从工作区和索引中删除文件")])]),t._v(" "),s("h3",{attrs:{id:"删除物理文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除物理文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除物理文件")]),t._v(" "),s("p",[t._v("当我们需要删除暂存区或分支上的文件，同时工作区也不需要这个文件了。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),s("h3",{attrs:{id:"删除文件修改记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文件修改记录","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除文件修改记录")]),t._v(" "),s("p",[t._v("当我们需要删除"),s("strong",[t._v("暂存区或分支")]),t._v("上的文件，但本地又需要使用，只是不希望这个文件被版本库控制。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"移动和重命名-git-mv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动和重命名-git-mv","aria-hidden":"true"}},[t._v("#")]),t._v(" 移动和重命名 git mv")]),t._v(" "),s("blockquote",[s("p",[t._v("Move or rename a file, a directory, or a symlin")]),t._v(" "),s("p",[t._v("用于移动或重命名文件，目录或符号链接。")])]),t._v(" "),s("h3",{attrs:{id:"重命名文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重命名文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 重命名文件")]),t._v(" "),s("p",[t._v("如果你想重命名文件，并且将这个改名放入暂存区。"),s("code",[t._v("source")]),t._v(" 必须存在，并且是文件，符号链接或目录。"),s("code",[t._v("destination")]),t._v(" 为重命名后的名称。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("destination"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"移动文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 移动文件")]),t._v(" "),s("p",[t._v("移动 "),s("code",[t._v("<source>")]),t._v(" 到 "),s("code",[t._v("<destination directory>")]),t._v(" 。最后一个参数必须是目标目录。")]),t._v(" "),s("p",[t._v("索引在成功完成后更新，但仍必须提交更改。")]),t._v(" "),s("p",[t._v("📖 "),s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("destination directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=r.exports}}]);